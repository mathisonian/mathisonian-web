[{"pk": 2, "model": "blog.post", "fields": {"content": "<p>I am <i>finally</i>&nbsp;getting around to taking this site off of wordpress/godaddy (the best webstack known to man).</p><p>I re-wrote the whole backend to run as a django app, and the blog is no longer on its own subdomain, but nicely integrated in here now. nice!</p><p>Funny that something that has such a negligible impact on a visitor to this site actually has a big impact on me. I can feel some emotion baggage floating away.</p>", "created_at": "2013-01-16T05:32:20.751Z", "title": "Move To Heroku", "slug": "move-to-heroku"}}, {"pk": 7, "model": "blog.post", "fields": {"content": "<p>Being a googlereader lover myself, it seems pretty terrible to not provide an rss feed for the blog. So, brand new feature, you can now follow this blog on rss via <a href=\"http://www.mathisonian.com/feeds/weblog/\">http://www.mathisonian.com/feeds/weblog/</a> or by clicking the little rss icon on the right side of the screen.</p><p>one of these days I'm going to end up with a full-fledged blogging framework.</p>", "created_at": "2013-01-31T04:23:39.199Z", "title": "Now Featuring RSS", "slug": "now-featuring-rss"}}, {"pk": 4, "model": "blog.post", "fields": {"content": "<p><p>During my move to Heroku, I learned a few things about the quirks of their django hosting. In particular, the official documentation about the serving of static files isn't too useful. Luckily, I found some helpful blog posts documenting this. They basically seemed to fall into two camps:</p><ol><li>Use the django server itself for the static files</li><li>Use a separate service like AWS to serve the static files.</li></ol>Below I talk about the pros and cons of each method, and how to implement a combination of both of them.<br/><br/><p><b>1. Static files via the Django Server</b></p><p>This blog post covers how to do this very well:&nbsp;<a href=\"http://matthewphiong.com/managing-django-static-files-on-heroku\">http://matthewphiong.com/managing-django-static-files-on-heroku</a></p><p>Pros:</p><ul><li>* easy to implement</li><li>* static files are served from same domain (no issues with CORS, etc.)</li></ul>Cons:<ul><li>* inefficient, the django server isn't really made to be serving these kinds of files</li><li>* not tied to additional services</li></ul><p><b>2. Static files with AWS&nbsp;</b></p><p>A great guide to implementing this is here:&nbsp;<a href=\"http://offbytwo.com/2012/01/18/deploying-django-to-heroku.html\">http://offbytwo.com/2012/01/18/deploying-django-to-heroku.html</a></p><p>Pros:</p><p></p><ul><li>* speed. aws is very fast</li><li>* feel good about doing things the 'right' way</li></ul><p></p><p>Cons:</p><p></p><ul><li>* additional set-up time</li><li>* can cause CORS issues</li></ul><p></p><p><b>Implementing Both</b></p><p>I recommend that you use AWS as much as possible. For me, I had all of my files on AWS, but this was causing some issues when I wanted to host files that javascript wanted access to - specifically I wanted to load up some images and use processing.js to do some visual manipulation on them.</p><p>The secret to implementing both of them is to use&nbsp;<i>two separate settings files.</i></p><p>Keep your aws settings in the regular&nbsp;<b>settings.py</b>&nbsp;file, and create a second file, call it&nbsp;<b>settingsnoaws.py&nbsp;</b>and set it up like you would via the blog post in section 1.&nbsp;</p><p>Now, the post in section one has you manipulating the Procfile by prepending a collectstatic command to it. We are going to change that command slightly:</p><p><pre>python manage.py collectstatic --settings=&lt;python module name for settingsnoaws.py&gt;</pre></p><p>Replace&nbsp;<b>&lt;python module name for settingsnoaws.py&gt;&nbsp;</b>with the relevant python module path (e.g. for this site it was \"mathisonian.settingsnoaws\").</p><p>Then, make sure you've updated your urls file to serve static files with django (as shown in the first blogpost) and use the url&nbsp;<b>/static/&lt;filename&gt;</b>&nbsp;to serve any static file you want with django.</p><p>NOTE: In this setup STATIC_URL will resolve to aws, and you will have to hardcode /static/... urls for any files you want to serve with the django server.</p><br></p>", "created_at": "2013-01-17T19:13:49.516Z", "title": "Django+Heroku: Multiple methods of serving static files", "slug": "django-heroku-methods-of-serving-static-files"}}, {"pk": 5, "model": "blog.post", "fields": {"content": "<p>As many of you know I am a bit obsessed with this phenomenon called livecoding. The basic idea is that people use programming as a performing art for while creating audio or visuals (see&nbsp;<a href=\"http://toplap.org/\">http://toplap.org/</a> for examples).</p><p><br></p><p>So, I have been working on my own sort of livecoding editor. This one is for <a href=\"http://processingjs.org\">processing.js</a>. What makes it different from any other web editor for processing.js is that in mine you don't have to reload the sketch to see your changes. The data is persistant through the use of javascript closures, so what you are actually doing is swapping out the drawing function while the sketch is running.</p><p><br></p><p>This allows you to get a much more interactive experience while programming. So you could make things like <a href=\"http://www.mathisonian.com/labs/processing/3d/cuakes\">a starwars scene</a>.</p><p><br></p><p><img src=\"http://i.imgur.com/gxsd8JJ.png?1\" style=\"cursor: nw-resize;\"><br></p><p><br></p><p>I've also added the ability to save, share, and version your creations, in the style of <a href=\"http://jsfiddle.net/\">jsfiddle</a>.</p><p><br></p><p>Updates to follow.</p>", "created_at": "2013-01-28T05:04:54.072Z", "title": "New Livecoding Editor in the Lab", "slug": "new-livecoding-editor-in-the-lab"}}, {"pk": 6, "model": "blog.post", "fields": {"content": "<p>I am proud to announce that we finally opened the doors to the NYC chapter of the <a href=\"http://www.hackerunion.org/nyc\">hackerunion</a>. The site was built by my colleagues at huffpost labs, <a href=\"https://twitter.com/brandondiamond\">brandon diamond</a>&nbsp;and <a href=\"https://twitter.com/andrewsass\">andrew sass</a></p><p><img src=\"http://i.imgur.com/rLK2fs6.jpg\" style=\"\"><br></p>", "created_at": "2013-01-30T00:03:28.203Z", "title": "Launching the HackerUnion", "slug": "launching-the-hackerunion"}}, {"pk": 11, "model": "blog.post", "fields": {"content": "<p><b>Assembly Code (Cave Paintings) - </b>You can tell that these programs are computer code, and that they used to mean something to someone. However, one can only speculate as to their original purpose. There may be references to rituals and incantations trying to communicate with compilers past. You've heard that similar paintings are still being created, but they seem to lack the handmade, genuine touch of those created by the ancients.</p><p><b>Bash (Hieroglyphics) - </b>The meaning of these symbols is much more obvious than those in assembly code. One can with a &nbsp;basic understanding of programming history and culture&nbsp;ascertain&nbsp;the general intention put forth in these bash programs, though every nuance may not be completely understood. Still, the archeologist is left wondering, why were some of the more massive works did not inspire their creators to use a more expressive language (since silicon-dating technologies indicate that these technologies definitely existed at the time of writing).</p>", "created_at": "2013-03-20T18:13:13.472Z", "title": "Assembly and Bash - Cave Paintings and Hieroglyphics", "slug": "assembly-and-bash-cave-paintings-and-hieroglyphics"}}, {"pk": 10, "model": "blog.post", "fields": {"content": "<p>As an iOS and icon-font novice, I had a tough time getting our projects symbol set icons to work properly on iOS. The following serves a tutorial to those attempting to do the same.</p><h3>1. Include the font in your project</h3><div>The first step to using any custom font with iOS is to include it in the project. You need to do two things:&nbsp;</div><div><ol><li><span style=\"font-family: Arial, Helvetica, Verdana, Tahoma, sans-serif; font-size: 15px; line-height: 1.45em;\">Copy the font file (usually a .ttf file) into xcode. &nbsp;I like to put mine in Supporting Files/Fonts/</span><br></li><li><span style=\"font-family: Arial, Helvetica, Verdana, Tahoma, sans-serif; font-size: 15px; line-height: 1.45em;\"><b>Add the font to the .plist file</b>: to do this, Use the key \"Fonts provided by application\" and set it to an array. Add an entry to this array for each font file you want to add, with type string and value &lt;filename&gt;. For example, my symbolset entry was named, Item 0, type String, value ss-standard.ttf.</span></li></ol><br></div><h3>2. Set the font on your UILabel</h3><div>You can do this using a css toolkit like <a href=\"http://www.nativecss.com/\">nativecss</a>, or <a href=\"https://github.com/tombenner/nui\">nui</a>, or just by <a href=\"http://stackoverflow.com/questions/6747325/ios-how-can-i-set-a-non-system-font-family-style-size-of-uilabel\">doing it in code</a></div><div>If you aren't sure about the name of the font or font family that you have available, you can include this snippet in your app delegate didFinishLaunchingWithOptions method:</div><div>\r\n<br/>\r\n<pre>\r\nfor (NSString *familyName in [UIFont familyNames]) {\r\n    for (NSString *fontName in [UIFont fontNamesForFamilyName:familyName]) {\r\n        NSLog(@\"%@ - %@\", familyName, fontName);\r\n    }\r\n}</pre></div><div><br></div><h3>3. Include a ligature or unicode character</h3><p>Symbolset includes methods to insert the symbols via unicode or via ligatures. Below I show the two ways to do this. The preferable method is up to you.</p><h4>Unicode</h4><div>This is done with code like this:</div><div><br/>\r\n<pre>self.myUILabel.text = @\"\\U0001F44E\"</pre><br/></div><div>Note that for this to work properly, you will have to <b>ensure that there are always 8 characters after the \\U</b>. Thanks to <a href=\"https://coderwall.com/p/wrb3pw\">Brendan O'Brien</a> for pointing this out.</div><div><br></div><h4>Ligature</h4><div>In order to use this method, you will have to add CoreText to your project and include the line&nbsp;</div><div>\r\n<p><pre>#import &lt;CoreText/CoreText.h&gt;</pre></p>at the top of your file. The trick here is to tell iOS to use any available ligature, by setting the&nbsp;<span style=\"font-family: Arial, Helvetica, Verdana, Tahoma, sans-serif; font-size: 15px; line-height: 1.45em;\">kCTLigatureAttributeName attribute to 2. This is done with the following code:</span></div><div></div><div><br/>\r\n<pre>NSMutableAttributedString *string = [[NSMutableAttributedString alloc] initWithString:@\"camera\"];\r\n[string setAttributes:@{(NSString *)kCTLigatureAttributeName:[NSNumber numberWithInt:2]} range:NSMakeRange(0, string.length)];\r\nself.myUILabel.attributedText = string;</pre><br/></div><div>Thanks to <a href=\"http://kylerosenbluth.com/2012/10/8/fonts\">Kyle Rosenbluth</a>&nbsp;for discussing this method.</div><div><br></div><div><br/><b>If you have any questions on the topic, feel free to <a href=\"mailto:blog@mathisonian.com\">email me</a> or ping me on <a href=\"http://www.twitter.com/mathisonian\">twitter</a>.</b><br/><br/></div>", "created_at": "2013-03-05T20:59:29.761Z", "title": "Using Symbolset font on iOS", "slug": "using-symbolset-font-on-ios"}}, {"pk": 9, "model": "blog.post", "fields": {"content": "<p><font color=\"#000000\">I moved to NYC from Ann Arbor, Michigan in June 2012. After living here for almost 3/4 of a year, it feels like a good time to write down some of my experiences with the transition.<br><br>The following is a grab-bag of observations.<br><br><br></font><h4>Don't Expect Corporate Loyalty (startups are corporations too)</h4><font color=\"#000000\"><br>I moved to New York to work for an ad-tech startup. After only three months I quit. I left for a variety of reasons, and went on to greener pastures. When leave I was presented with plenty of words implying that I should feel guilty about leaving a company so quickly, especially after I had interned with them and had a good relationship with many people there.<br><br>One month later I got a call from a friend. The ad-tech startup had just laid off a huge portion of its employees, including many of my friends there, with zero notice. If I had stayed I would have been among those without jobs.<br><br>I don\u2019t feel bad about leaving.<br><br></font><h4>There is a huge demand for talented developers</h4><font color=\"#000000\"><br>There are so many startups and larger companies in ny looking for developer talent, it\u2019s incredible. <a href=\"http://mappedinny.com/\">This map</a> shows just some of the publicly listed jobs. A talented developer shouldn\u2019t have a hard time finding work, provided that they know how to talk to people and find out about the opportunities. And that is a skill that you need to have.<br><br><br></font><h4>There are a million (and more) meetups</h4><font color=\"#000000\"><br>Upon moving here I really didn\u2019t know many people. In an attempt to remedy that I turned to meetup as a way to find people with similar interests. It is really overwhelming how many meetup groups there are in the city, and many of them cover intriguing topics.<br><br>The problem is that going to meetups tends to lead to a few things that are less than desirable. First, you meet people who are trying to \u201cnetwork\u201d, and not those who are just trying to learn things or meet other interesting people. Second, if you spend a lot of time going to meetups, you spend a lot less time doing things that are actually productive.<br><br>Meetups with a startup-y topic can be like support groups for entrepreneurs.<br><br><br></font><h4>Being in the tech scene doesn\u2019t mean you are technical</h4><font color=\"#000000\"><br>Many are entrepreneurs. Or hustlers. Or growth hackers. Don\u2019t expect technical sounding events to be full of technically proficient folks. The New York Tech Meetup is a good example for this. Though its topic is \u201cTech\u201d, it is very entrepreneurial, and as such attracts a lot of people looking to create, run, or finance companies,in addition to the engineers and designers.<br><br><br></font><h4>You'll overhear people talking about programming</h4><p><font color=\"#000000\"><br></font></p><font color=\"#000000\">Our culture is starting to fetishize programming (or the ability to program, I\u2019m not sure which yet). For some reason people seem to have started thinking of it as an intrinsically good thing. Most people I know who actually know how to code see it as what it is - a tool for creating things. <br><br>Because of this it is almost always non-professionals that are overheard talking about programming. More like second-week code academy members that don\u2019t want to go through the trouble of finding an engineer to hire (because that is hard).<br><br><br></font><h4>There are lots of cool startups, and there are lots of successful startups. The overlap isn't huge.</h4><font color=\"#000000\"><br>A lot of ny tech is in advertising and finance. That\u2019s fine and expected since the city has its roots there. There seem to be relatively few startups outside of this space that are also successful.<br><br>A few examples that I can think of are tumblr, foursquare, squarespace, and etsy. There\u2019s at least an order of magnitude more in the advertising / finance world.<br><br><br></font><h4>Hackathons are marketing events</h4><font color=\"#000000\"><br>What is suprising about this isn\u2019t that hackathons are marketing events, it\u2019s that people don\u2019t seem to realize that hackathons are marketing events.<br><br>A week or two ago there was this outcry about the <a href=\"http://jamiemsmyth.blogspot.com/2013/01/corporate-hackathons-fine-line-between.html\">Campbell's Soup</a> hackathon. Really? How did it take people this long to realize that these events are put on by companies, and companies tend not to be altruistic.<br><br>Theres nothing wrong with this. Some people really like hackathons, they get to have fun and meet people. Why does it matter if its at a marketing event?<br><br>Something I have a bit more of a problem with is when people use similar events to get people to design things for them for free (looking at you <a href=\"http://www.mikebloomberg.com/index.cfm?objectID=68A7D21F-C29C-7CA2-F3DAE67890E057B5\">nyc phone booth challenge</a>).<br><br><br></font><h4>People are social climbers, even in tech</h4><font color=\"#000000\"><br>This is one that I didn\u2019t get to experience in the midwest. Instead of desiring to be recognized for their work, a person may just desire to be recognized. I guess this one can just be filed under unfortunate human social behaviors. <br><br><br></font><h4>A lot of startups are bullshit</h4><font color=\"#000000\"><br>Given the large startup scene in ny, it follows that there must be a lot of venture capital floating around the city. Given this, some startups get funded that are really vapor and never should have received funding (and wouldn\u2019t have in a setting with less available capital, or in a different economic period). While Ann Arbor didn\u2019t have a huge startup scene, this forced those that were there to be very aware of their products and finances, and create actually viable companies.<br><br><br></font><h4>On a positive note</h4><font color=\"#000000\"><br>The community is full of amazing and talented people. I don\u2019t want this list to sound too negative, it\u2019s just that there are a lot of distractions. I wish the stuff above would go away, but that doesn\u2019t stop me from enjoying it here. The city is great and offers so many things in addition to its booming tech industry. Just learn to ignore those things. I\u2019ve met the most creative people through my work here, and I wouldn\u2019t give that up. Don\u2019t get discouraged.</font><br>\r\n\r\n</p>", "created_at": "2013-02-06T18:28:39.814Z", "title": "On Moving to the NYC Tech Scene", "slug": "on-moving-to-the-nyc-tech-scene"}}]